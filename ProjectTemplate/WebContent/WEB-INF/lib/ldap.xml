<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    <global-method-security pre-post-annotations="enabled" />

    <http use-expressions="true" auto-config="true">
        <logout invalidate-session="true" logout-success-url="/login.xhtml"/>
        <intercept-url pattern="/login.xhtml" access="permitAll"/>
		<intercept-url pattern="/admin/admin.xhtml" access="hasRole('${ldap.role.admin}')" />
		<intercept-url pattern="/index.xhtml" access="hasAnyRole('${ldap.role.admin}','${ldap.role.user}')"/>
		<intercept-url pattern="/css/**" access="permitAll"/>
    	<intercept-url pattern="/images/**" access="permitAll"/> 
    	
    	<intercept-url pattern="/**" access="hasAnyRole('${ldap.role.admin}','${ldap.role.user}')"/>
        <form-login authentication-failure-url="/login.xhtml"  login-page="/login.xhtml" 
        	default-target-url="/setup/step1.xhtml" always-use-default-target="true"/>
    </http>
	<!-- <http pattern="/css/**" security="none"/>
	<http pattern="/images/**" security="none"/> -->
	
		<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">  
	    	<beans:property name="providers">   
		        <beans:list> 
		        	<beans:ref local="ldapAuthProvider"/> 
		            <beans:ref local="daoAuthenticationProvider"/>
	            
		        </beans:list>   
		    </beans:property>  
		</beans:bean>  
    	
    	<authentication-manager>
    		<authentication-provider ref="ldapAuthProvider">
        	</authentication-provider>
    		<authentication-provider>
    			<password-encoder hash="md5" />
	    		<user-service id="userDetailsService" >
	               	<user name="${df.usern}" password="${df.pw}" authorities="${ldap.role.user},${ldap.role.admin}" />
	           	</user-service>
        	</authentication-provider>
    	</authentication-manager>
       
      	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider" >
    		<beans:property name="userDetailsService" ref="userDetailsService" />
    	</beans:bean>
       
       <beans:bean id="ldapAuthProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
		<beans:constructor-arg>
			<beans:bean
				class="org.springframework.security.ldap.authentication.BindAuthenticator">
				<beans:constructor-arg ref="contextSource" />
				<beans:property name="userSearch" ref="userSearch"/>
			</beans:bean>
		</beans:constructor-arg>
		<beans:constructor-arg>
			<beans:bean
				class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
				<beans:constructor-arg ref="contextSource" />
				<beans:constructor-arg value="" />
				<beans:property name="rolePrefix" value="ROLE_" />
				<beans:property name="searchSubtree" value="true"/> 
				<beans:property name="convertToUpperCase" value="true" />
				
			</beans:bean>
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="contextSource"
		class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<beans:constructor-arg value="${ldap.url}" />
		<beans:property name="userDn" value="${ldap.user.dn}" />
		<beans:property name="password" value="${ldap.user.pwd}" />
		<beans:property name="referral" value="follow" />
	</beans:bean>
	
    <beans:bean id="userSearch"
		class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
		<beans:constructor-arg index="0" value="" />
		<beans:constructor-arg index="1" value="(&amp;(sAMAccountName={0})(objectclass=user))" />
		<beans:constructor-arg index="2" ref="contextSource" />
	</beans:bean>
	<beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<beans:property name="ignoreUnresolvablePlaceholders" value="false"/>
			<beans:property name="locations">
				<beans:list>
			    	<beans:value>/WEB-INF/authentication.properties</beans:value>
					<beans:value>/WEB-INF/df.properties</beans:value>
					<!-- <beans:value>/WEB-INF/roles.properties</beans:value> -->
				</beans:list>
			</beans:property>
		</beans:bean>
</beans:beans>